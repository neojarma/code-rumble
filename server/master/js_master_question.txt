import * as fs from "fs"

class ImportError extends Error { }

const loadModule = async (modulePath) => {
    try {
        return await import(modulePath)
    } catch (e) {
        throw new ImportError(`Unable to import module ${modulePath}`)
    }
}

function loadTestCases(path) {
    return fs.readFileSync(path)
}

(async function main() {
    const submissionId = process.argv[2]
    const mod = await loadModule(`../submitted-code/${submissionId}.js`)
    const testCases = JSON.parse(loadTestCases(`./js-executor/test-cases/${submissionId}.json`))

    let fileContentResult = ""

    try {

        testCases.forEach((test, i) => {
            const output  = {{parse_return_replace}} 
            const rawInput = test["input"].split("\n")
            const result = mod.{{function_name_replace}}({{loop_params_replace}})

            if (result === output) {
                if (i == testCases.length - 1) {
                    fileContentResult += `${test["id"]}=pass=${result}=${output}`
                } else {
                    fileContentResult += `${test["id"]}=pass=${result}=${output}\n`
                }
            } else {
                if (i == testCases.length - 1) {
                    fileContentResult += `${test["id"]}=failed=${result}=${output}`
                } else {
                    fileContentResult += `${test["id"]}=failed=${result}=${output}\n`
                }
            }
        })

    } catch (error) {
        fileContentResult.result = "all case failed"

    } finally {
        const outPath = `./js-executor/result-code/${submissionId}.txt`
        fs.writeFileSync(outPath, fileContentResult)
        console.log("finish")
    }
})()